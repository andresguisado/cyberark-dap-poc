---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace:  {{ DEMOAPPS_NAMESPACE }}
type: Opaque
data:
  DBName:   bXlhcHBEQg==
stringData:
  conjur-map: |-   
    username: dev/okd3-cluster1/k8s-provider-db/username
    password: dev/okd3-cluster1/k8s-provider-db/password
    url: dev/okd3-cluster1/k8s-provider-db/url


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-provider-app
  namespace: {{ DEMOAPPS_NAMESPACE }}
  labels:
    app: k8s-provider-app
spec:
  replicas: 1
  selector:
    matchLabels:
      role: demo
      app: k8s-provider-app
  template:
    metadata:
      labels:
        role: demo
        app: k8s-provider-app
    spec:
      serviceAccountName: {{ K8S_PROVIDER_SERVICEACCOUNT }}
      shareProcessNamespace: true
      initContainers:
      - name: authenticator
        image: {{ K8S_PROVIDER_IMAGE }}
        imagePullPolicy: IfNotPresent
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONJUR_APPLIANCE_URL
            value: {{ CONJUR_APPLIANCE_URL }}
          - name: CONTAINER_MODE
            value: init
          - name: CONJUR_AUTHN_URL
            value: {{ CONJUR_AUTHN_URL }}
          - name: CONJUR_ACCOUNT
            value: {{ CONJUR_ACCOUNT }}
          - name: CONJUR_AUTHN_LOGIN
            value: {{ K8S_PROVIDER_CONJUR_AUTHN_LOGIN }}
          - name: SECRETS_DESTINATION
            value: k8s_secrets
          - name: K8S_SECRETS
            value: db-credentials
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: dap-certificate
                key: ssl-certificate
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
      containers:
      - name: demoapp
        image: {{ DEMOAPP_IMAGE }}
        imagePullPolicy: IfNotPresent
        env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: DB_URL
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: url
          - name: DB_PLATFORM
            value: {{ DB_PLATFORM }}
      #imagePullSecrets:
        #- name: dockerpullsecret-k8s-provider-account
      volumes:
        - name: conjur-access-token
          emptyDir:
            medium: Memory